version: '3.8'

services:
  node-app:
    build:
      context: .
      dockerfile: Dockerfile
    # image: backend-node-app
    # platform: linux/amd64  # Specify the platform
    container_name: node-dev
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules  # Ensures node_modules is not overwritten by the host
    environment:
      - MYSQL_HOST: mysql-dev
      - MYSQL_USER: ${MYSQL_USER}
      - MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      - MYSQL_DB: ${MYSQL_DB}
      - YOUR_PRIVATE_VAPID_KEY: ${YOUR_PRIVATE_VAPID_KEY}
      - YOUR_PUBLIC_VAPID_KEY: ${YOUR_PUBLIC_VAPID_KEY}
      - FASt2SMSTOKEN: ${FASt2SMSTOKEN}
      - YOUR_BUCKET_REGION: ${YOUR_BUCKET_REGION}
      - YOUR_SECRET_ACCESS_KEY: ${YOUR_SECRET_ACCESS_KEY}
      - YOUR_ACCESS_KEY_ID: ${YOUR_ACCESS_KEY_ID}
      - JWT_SECRET: ${JWT_SECRET}
      - EMAIL_USER: ${EMAIL_USER}
      - EMAIL_PASS: ${EMAIL_PASS}
    depends_on:
      - db
    ports:
      - "4200:4200"
    command: npm run-script start-dev

  db:
    image: mysql:5.7
    # platform: linux/amd64  # Specify the platform
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./sql_script.sql:/docker-entrypoint-initdb.d/init.sql


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ngnix.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/certificate.crt:/etc/ssl/certificate.crt
      - ./ssl/private.key:/etc/ssl/private.key
    # volumes:
    #   - ./ngnix.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - node-app

volumes:
  db-data:


  # sudo docker-compose --env-file ./env/.env.dev -f docker-compose-dev.yml up -d
  # sudo docker run -it --rm   -v $(pwd)/certs:/etc/letsencrypt   -v $(pwd)/certs-data:/data/letsencrypt   certbot/certbot certonly   --webroot   -w /data/letsencrypt   --email nikhil@theshopbusiness.com   -d api.theshopbusiness.com   --agree-tos   --no-eff-email -v