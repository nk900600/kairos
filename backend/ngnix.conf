# server {
#     listen 80;

#     location / {
#         proxy_pass http://node-app:4200;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }



# server {
#     listen 80;
#     server_name api.theshopbusiness.com;

#     # Redirect all HTTP requests to HTTPS
#     location / {
#         return 301 https://$host$request_uri;
#     }
# }

# server {
#     listen 443 ssl;
#     server_name api.theshopbusiness.com;

#     # Path to the SSL certificate and key files
#     ssl_certificate ./ssl/api.theshopbusiness.com.pem;
#     ssl_certificate_key ./ssl/api.theshopbusiness.com.key;

#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;

#     # Security headers (optional but recommended)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Content-Type-Options nosniff;
#     add_header X-Frame-Options DENY;
#     add_header X-XSS-Protection "1; mode=block";

#     location / {
#         proxy_pass http://node-app:4200; Adjust this to your backend configuration
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }



server {
    listen 80;
    server_name api.theshopbusiness.com;

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.theshopbusiness.com;

    ssl_certificate /etc/ssl/certificate.crt; 
    ssl_certificate_key /etc/ssl/private.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        proxy_pass http://node-app:4200;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

        # Handle preflight requests
        if ($request_method = OPTIONS ) {
            return 204;
        }

    }
}
